#!/usr/bin/env node
var request = require('request');
var getURLs = require('get-urls');

// console.log('test');

// const MongoClient = require('mongodb').MongoClient

// MongoClient.connect('link-to-mongodb', (err, database) => {
//   // ... start the server
// })

var options = {
  url: '',
  headers: {
    'User-Agent': 'web:5Ku4NNXMzh5atA:v0.0.1 (by /u/jare_)'
  }
};

var count = 0;
options['url'] = 'https://www.reddit.com/subreddits/popular.json?limit=100';
request(options, function (error, response, body) {
  if (!error && response.statusCode == 200) {
    var bodyJSON = JSON.parse(body);
    var data = bodyJSON.data.children;
    var subData = data.map(function(sub) { return {url: sub.data.url, name: sub.data.display_name} });
    subData.forEach(function(subDataElement) {
      let subURL = subDataElement.url;
      let subName = subDataElement.name;

      let subURLFormatted = `https://www.reddit.com${subURL}top.json`;
      options['url'] = subURLFormatted;
      request(options, function(error, response, body) {
        if (!error && response.statusCode == 200) {
          var bodyJSON = JSON.parse(body);
          var data = bodyJSON.data.children;
          var linkIDs = data.map(function(link) { return link.data.id; });

          linkIDs.forEach(function(link, index, linkArr) {
            var linkURL = `https://www.reddit.com${subURL}comments/${link}.json`;
            options['url'] = linkURL;
            request(linkURL, function(error, response, body) {

              try {
                var data = JSON.parse(body);
              } catch (e) {
                return;
              }

              var comments = data.map(function(comment) { 
                return comment.data.children;
              });

              var commentsChildren =  comments.map(function(commentChildren) {
                  var commentURLs = commentChildren.map(function(childrenData) {

                    if (!childrenData.data.body) return '';

                    var finalURL = '';
                    var urls = getURLs(childrenData.data.body);
                    for (let url of urls) finalURL = url;
                    return finalURL;
                    
                  });

                  return commentURLs;
              });

              var mergedChildren = [].concat.apply([], commentsChildren);

              var mergedChildrenFiltered = mergedChildren.filter(function(url) {
                return (url !== '') && !url.includes('reddit.com/r') && (url.includes('gif') || url.includes('gifv'));
              });

              mergedChildrenFiltered.forEach(function(imgurLink, index, array) {


                count++;
                if (count > 25) {
                  return;
                }

                if (imgurLink.charAt(imgurLink.length - 1) == ')') {
                  imgurLink = imgurLink.slice(0, -1);
                }


                let data = {
                  link: imgurLink,
                  sub: subName
                }

                // Send back link
                console.log(data);
                // socket.emit('search-response', data);

              });
            });
          });
        }
      });
    });
  }
});
  
